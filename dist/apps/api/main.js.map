{"version":3,"file":"main.js","mappings":"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","sources":["webpack://calendar/./apps/api/src/app/app.controller.ts","webpack://calendar/./apps/api/src/app/app.module.ts","webpack://calendar/./apps/api/src/app/app.service.ts","webpack://calendar/./apps/api/src/exception/controlled.exception.ts","webpack://calendar/./apps/api/src/exception/customValidation.exception.ts","webpack://calendar/./apps/api/src/exception/httpFilter.exception.ts","webpack://calendar/./apps/api/src/exception/index.ts","webpack://calendar/./apps/api/src/exception/internal-error.exception.ts","webpack://calendar/./apps/api/src/modules/authentication/auth.module.ts","webpack://calendar/./apps/api/src/modules/authentication/guard/role.guard.ts","webpack://calendar/./apps/api/src/modules/authentication/strategy/jwt.strategy.ts","webpack://calendar/./apps/api/src/modules/event/event.module.ts","webpack://calendar/./apps/api/src/modules/google-calendar/dto/create-google-event.dto.ts","webpack://calendar/./apps/api/src/modules/google-calendar/dto/detele-google-event.dto.ts","webpack://calendar/./apps/api/src/modules/google-calendar/dto/get-google-events.dto.ts","webpack://calendar/./apps/api/src/modules/google-calendar/dto/index.ts","webpack://calendar/./apps/api/src/modules/google-calendar/dto/update-google-event.dto.ts","webpack://calendar/./apps/api/src/modules/google-calendar/gcanlendar.controller.ts","webpack://calendar/./apps/api/src/modules/google-calendar/gcanlendar.module.ts","webpack://calendar/./apps/api/src/modules/google-calendar/gcanlendar.service.ts","webpack://calendar/./apps/api/src/modules/google-calendar/types/auth.user.ts","webpack://calendar/./apps/api/src/modules/room/dtos/create-room.req.ts","webpack://calendar/./apps/api/src/modules/room/dtos/create-room.res.ts","webpack://calendar/./apps/api/src/modules/room/dtos/get-room.req.ts","webpack://calendar/./apps/api/src/modules/room/dtos/get-rooms.res.ts","webpack://calendar/./apps/api/src/modules/room/dtos/update-room.req.ts","webpack://calendar/./apps/api/src/modules/room/room.controller.ts","webpack://calendar/./apps/api/src/modules/room/room.module.ts","webpack://calendar/./apps/api/src/modules/room/room.service.ts","webpack://calendar/./apps/api/src/modules/typeorm/entities/common.entity.ts","webpack://calendar/./apps/api/src/modules/typeorm/entities/event.entity.ts","webpack://calendar/./apps/api/src/modules/typeorm/entities/recurrence_event.entity.ts","webpack://calendar/./apps/api/src/modules/typeorm/entities/room.entity.ts","webpack://calendar/./apps/api/src/modules/typeorm/entities/user.entity.ts","webpack://calendar/./apps/api/src/modules/typeorm/index.ts","webpack://calendar/./apps/api/src/modules/typeorm/typeorm.module.ts","webpack://calendar/./apps/api/src/types/common.ts","webpack://calendar/./apps/api/src/types/const.ts","webpack://calendar/./apps/api/src/types/enum.ts","webpack://calendar/./apps/api/src/types/index.ts","webpack://calendar/./apps/api/src/utils/helper.ts","webpack://calendar/./apps/api/src/utils/index.ts","webpack://calendar/./apps/api/src/utils/pipe.ts","webpack://calendar/./apps/api/src/utils/response.ts","webpack://calendar/external commonjs \"@nestjs/common\"","webpack://calendar/external commonjs \"@nestjs/config\"","webpack://calendar/external commonjs \"@nestjs/core\"","webpack://calendar/external commonjs \"@nestjs/jwt\"","webpack://calendar/external commonjs \"@nestjs/passport\"","webpack://calendar/external commonjs \"@nestjs/swagger\"","webpack://calendar/external commonjs \"@nestjs/typeorm\"","webpack://calendar/external commonjs \"class-transformer\"","webpack://calendar/external commonjs \"class-validator\"","webpack://calendar/external commonjs \"cookie-parser\"","webpack://calendar/external commonjs \"google-auth-library\"","webpack://calendar/external commonjs \"googleapis\"","webpack://calendar/external commonjs \"lodash\"","webpack://calendar/external commonjs \"moment-timezone\"","webpack://calendar/external commonjs \"nest-winston\"","webpack://calendar/external commonjs \"passport-jwt\"","webpack://calendar/external commonjs \"rrule\"","webpack://calendar/external commonjs \"tslib\"","webpack://calendar/external commonjs \"typeorm\"","webpack://calendar/external commonjs \"winston\"","webpack://calendar/external commonjs \"winston-daily-rotate-file\"","webpack://calendar/external node-commonjs \"crypto\"","webpack://calendar/external node-commonjs \"fs\"","webpack://calendar/external node-commonjs \"path\"","webpack://calendar/webpack/bootstrap","webpack://calendar/./apps/api/src/main.ts"],"sourcesContent":["import { Controller, Get } from '@nestjs/common'\r\n\r\nimport { AppService } from './app.service'\r\nimport { ApiResponse, ApiTags } from '@nestjs/swagger'\r\nimport { CommonReponse } from '../utils'\r\n\r\n@ApiTags('Common Response Format')\r\n@Controller()\r\nexport class AppController {\r\n  constructor(private readonly appService: AppService) {}\r\n\r\n  @Get()\r\n  @ApiResponse({\r\n    type: CommonReponse\r\n  })\r\n  getData() {\r\n    return this.appService.getData()\r\n  }\r\n}\r\n","import { Module } from '@nestjs/common'\r\nimport { ConfigModule, ConfigService } from '@nestjs/config'\r\nimport { AppController } from './app.controller'\r\nimport { AppService } from './app.service'\r\nimport { GoogleCalendarModule } from '../modules/google-calendar/gcanlendar.module'\r\n\r\nimport { WinstonModule } from 'nest-winston'\r\nimport { format, transports } from 'winston'\r\nimport * as DailyRotateFile from 'winston-daily-rotate-file'\r\nimport { TypeormConfigModule } from '../modules/typeorm/typeorm.module'\r\nimport { AuthModule } from '../modules/authentication/auth.module'\r\nimport { RoomModule } from '../modules/room/room.module'\r\nimport { EventModule } from '../modules/event/event.module'\r\n\r\n@Module({\r\n  imports: [\r\n    ConfigModule.forRoot({\r\n      isGlobal: true,\r\n      envFilePath: '.env'\r\n    }),\r\n    // For TypeORM Postgres\r\n    TypeormConfigModule,\r\n    // For Winston Logger\r\n    WinstonModule.forRoot({\r\n      format: format.combine(\r\n        format.errors({ stack: true }),\r\n        format.splat(),\r\n        format.timestamp({\r\n          format: () => new Date().toLocaleString()\r\n        }),\r\n        format.printf((log) => {\r\n          const { timestamp, level, message, ...args } = log\r\n          const ts = timestamp.slice(0, 19).replace('T', ' ')\r\n          return `${ts} [${level}]: ${message} ${Object.keys(args).length ? JSON.stringify(args, null, 2) : ''}`\r\n        })\r\n      ),\r\n      transports: [\r\n        new transports.Console({\r\n          level: 'debug',\r\n          handleExceptions: true\r\n        }),\r\n        new DailyRotateFile({\r\n          dirname: './logs/infos/',\r\n          filename: 'info-%DATE%.log',\r\n          datePattern: 'YYYY-MM-DD',\r\n          maxFiles: '2d',\r\n          maxSize: '20m',\r\n          zippedArchive: false,\r\n          level: 'info'\r\n        }),\r\n        new DailyRotateFile({\r\n          dirname: './logs/erros/',\r\n          filename: 'error-%DATE%.log',\r\n          datePattern: 'YYYY-MM-DD',\r\n          maxFiles: '2d',\r\n          maxSize: '20m',\r\n          zippedArchive: false,\r\n          level: 'error'\r\n        })\r\n      ]\r\n    }),\r\n    AuthModule,\r\n    GoogleCalendarModule,\r\n    RoomModule,\r\n    EventModule\r\n  ],\r\n  controllers: [AppController],\r\n  providers: [AppService]\r\n})\r\nexport class AppModule {}\r\n","import { Inject, Injectable } from '@nestjs/common';\r\nimport { Logger } from 'winston';\r\n\r\n@Injectable()\r\nexport class AppService {\r\n  constructor(@Inject('winston') private readonly logger: Logger) {}\r\n\r\n  getData(): string {\r\n    this.logger.info('Calendar API is running!');\r\n    return 'Calendar API is running!';\r\n  }\r\n}\r\n","import { HttpException, HttpStatus } from '@nestjs/common'\r\nimport { response } from '../utils'\r\n\r\nexport class UnauthorizedException extends HttpException {\r\n  constructor(msg?: unknown) {\r\n    super({ code: HttpStatus.UNAUTHORIZED, message: msg || 'Unauthorized' }, HttpStatus.UNAUTHORIZED)\r\n  }\r\n}\r\n\r\nexport class ExceptionConflict extends HttpException {\r\n  constructor(msg?: unknown) {\r\n    super(\r\n      response({ code: HttpStatus.CONFLICT, message: msg || 'Already exists' }, HttpStatus.CONFLICT, 'FAIL'),\r\n      HttpStatus.CONFLICT\r\n    )\r\n  }\r\n}\r\n\r\nexport class ExceptionNotFound extends HttpException {\r\n  constructor(msg?: unknown) {\r\n    super(response({ message: msg || 'Not found' }, HttpStatus.NOT_FOUND, 'FAIL'), HttpStatus.NOT_FOUND)\r\n  }\r\n}\r\n\r\nexport class ExceptionBadRequest extends HttpException {\r\n  constructor(msg?: unknown) {\r\n    super(\r\n      response({ code: HttpStatus.BAD_REQUEST, message: msg || 'Bad request' }, HttpStatus.BAD_REQUEST, 'FAIL'),\r\n      HttpStatus.BAD_REQUEST\r\n    )\r\n  }\r\n}\r\n\r\nexport class ExceptionUnauthorized extends HttpException {\r\n  constructor(msg?: unknown) {\r\n    super(\r\n      response({ code: HttpStatus.UNAUTHORIZED, message: msg || 'Unauthorized' }, HttpStatus.UNAUTHORIZED, 'FAIL'),\r\n      HttpStatus.UNAUTHORIZED\r\n    )\r\n  }\r\n}\r\n\r\nexport class ExceptionForbidden extends HttpException {\r\n  constructor(msg?: unknown) {\r\n    super(\r\n      response({ code: HttpStatus.FORBIDDEN, message: msg || 'Forbidden' }, HttpStatus.FORBIDDEN, 'FAIL'),\r\n      HttpStatus.FORBIDDEN\r\n    )\r\n  }\r\n}\r\n","import { ArgumentMetadata, BadRequestException, ValidationPipe } from '@nestjs/common'\r\nimport { ValidationError } from 'class-validator'\r\nimport { response } from '../utils'\r\n\r\nexport class CustomeValidationPipe extends ValidationPipe {\r\n  public async transform(value: any, metadata: ArgumentMetadata): Promise<any> {\r\n    try {\r\n      return await super.transform(value, metadata)\r\n    } catch (error) {\r\n      if (error instanceof BadRequestException) {\r\n        const errors = error.getResponse() as ValidationError[]\r\n        throw new BadRequestException(response(errors, 400, 'VALIDATION FAIL'))\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { ArgumentsHost, Catch, ExceptionFilter, HttpException, HttpStatus } from '@nestjs/common'\r\nimport { HttpAdapterHost } from '@nestjs/core'\r\n@Catch()\r\nexport class GlobalExceptionsFilter implements ExceptionFilter {\r\n  constructor(private readonly httpAdapterHost: HttpAdapterHost) {}\r\n\r\n  catch(exception: any, host: ArgumentsHost): void {\r\n    let responseBody: unknown\r\n    const { httpAdapter } = this.httpAdapterHost\r\n    const ctx = host.switchToHttp()\r\n    const httpStatus = exception instanceof HttpException ? exception.getStatus() : HttpStatus.INTERNAL_SERVER_ERROR\r\n\r\n    // Response for controlled exception\r\n    if (exception instanceof HttpException) {\r\n      responseBody = exception.getResponse()\r\n    }\r\n\r\n    if (401 === exception.status) {\r\n      responseBody = {\r\n        code: httpStatus,\r\n        info: 'FAIL',\r\n        message: exception.message\r\n      }\r\n    }\r\n\r\n    // Response for unhandled exception\r\n    if (httpStatus === HttpStatus.INTERNAL_SERVER_ERROR) {\r\n      responseBody = {\r\n        code: httpStatus,\r\n        info: 'FAIL',\r\n        message: exception.response || 'Internal Server Error'\r\n      }\r\n    }\r\n\r\n    httpAdapter.reply(ctx.getResponse(), responseBody, httpStatus)\r\n  }\r\n}\r\n","export * from './controlled.exception'\r\nexport * from './internal-error.exception'\r\nexport * from './customValidation.exception'\r\n","import { HttpException, HttpStatus } from '@nestjs/common'\r\n\r\nexport class ServerError extends HttpException {\r\n  constructor(msg?: any) {\r\n    super(msg || 'Internal Server Error', HttpStatus.INTERNAL_SERVER_ERROR)\r\n  }\r\n}\r\n","import { Module } from '@nestjs/common'\r\nimport { ConfigModule } from '@nestjs/config'\r\nimport { JwtModule, JwtService } from '@nestjs/jwt'\r\nimport { PassportModule } from '@nestjs/passport'\r\nimport { JwtStrategy } from './strategy/jwt.strategy'\r\n\r\n@Module({\r\n  imports: [\r\n    JwtModule.register({\r\n      secret: process.env.ACCESS_TOKEN_SECRET,\r\n      signOptions: { expiresIn: `${process.env.ACCESS_TOKEN_TTL_IN_DAY}d` }\r\n    })\r\n  ],\r\n  controllers: [],\r\n  providers: [JwtStrategy]\r\n})\r\nexport class AuthModule {}\r\n","import { CanActivate, ExecutionContext, Injectable, SetMetadata, mixin } from '@nestjs/common'\r\nimport { Role } from '../../../types/enum'\r\nimport { createParamDecorator } from '@nestjs/common'\r\nimport { GoogleCalendarService } from '../../google-calendar/gcanlendar.service'\r\nimport { ExceptionForbidden } from '../../../exception'\r\n\r\nexport const ROLES_KEY = 'roles'\r\nexport const Roles = (...roles: Role[]) => SetMetadata(ROLES_KEY, roles)\r\n\r\nexport const AuthUser = createParamDecorator((data: unknown, ctx: ExecutionContext) => {\r\n  const req = ctx.switchToHttp().getRequest()\r\n  return req['user']\r\n})\r\n\r\nexport const RoleGuard = (roles: Role[]) => {\r\n  class Guard implements CanActivate {\r\n    async canActivate(context: ExecutionContext): Promise<boolean> {\r\n      const request = context.switchToHttp().getRequest()\r\n      return roles.includes(request?.user?.role)\r\n    }\r\n  }\r\n  return mixin(Guard)\r\n}\r\n\r\nexport const PermisionUpdate = () => {\r\n  @Injectable()\r\n  class Guard implements CanActivate {\r\n    constructor(private readonly calendarService: GoogleCalendarService) {}\r\n    async canActivate(context: ExecutionContext): Promise<boolean> {\r\n      const request = context.switchToHttp().getRequest()\r\n      if ([Role.ADMIN, Role.DIRECTOR, Role.MANAGER].includes(request.user.role_name)) return true\r\n\r\n      const event = await this.calendarService.getCalendarEventByIdService(request.params.eventId)\r\n\r\n      if (!event) throw new ExceptionForbidden('Event not found')\r\n\r\n      if (event?.extendedProperties?.private?.creator_id === request.user.id) return true\r\n\r\n      throw new ExceptionForbidden('You do not have permission to update this event')\r\n    }\r\n  }\r\n  return mixin(Guard)\r\n}\r\n","import { Inject, Injectable } from '@nestjs/common'\r\nimport { PassportStrategy } from '@nestjs/passport'\r\nimport { ExtractJwt, Strategy } from 'passport-jwt'\r\nimport { Logger } from 'winston'\r\n\r\n@Injectable()\r\nexport class JwtStrategy extends PassportStrategy(Strategy, 'jwt') {\r\n  constructor(@Inject('winston') private readonly logger: Logger) {\r\n    super({\r\n      jwtFromRequest: ExtractJwt.fromExtractors([\r\n        (req) => {\r\n          return req?.cookies[process.env.TOKEN_KEY_COOKIE]\r\n        }\r\n      ]),\r\n      ignoreExpiration: false,\r\n      secretOrKey: process.env.ACCESS_TOKEN_SECRET\r\n    })\r\n  }\r\n\r\n  validate(payload: unknown) {\r\n    this.logger.info(this.name.toString() + 'JWT Strategy validate %s' + JSON.stringify(payload))\r\n    return payload\r\n  }\r\n}\r\n","import { Module } from '@nestjs/common'\r\nimport { TypeOrmModule } from '@nestjs/typeorm'\r\nimport { MeetingRoom, UserEntity } from '../typeorm'\r\n\r\n@Module({\r\n  imports: [TypeOrmModule.forFeature([MeetingRoom, UserEntity])],\r\n  controllers: [],\r\n  providers: [],\r\n  exports: []\r\n})\r\nexport class EventModule {}\r\n","import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger'\r\nimport { Type } from 'class-transformer'\r\nimport {\r\n  ArrayNotEmpty,\r\n  IsArray,\r\n  IsBoolean,\r\n  IsEmail,\r\n  IsNotEmpty,\r\n  IsNotEmptyObject,\r\n  IsObject,\r\n  IsOptional,\r\n  IsString,\r\n  Matches,\r\n  ValidateNested\r\n} from 'class-validator'\r\n\r\nexport class Email {\r\n  @ApiProperty({\r\n    required: true\r\n  })\r\n  @IsNotEmpty()\r\n  @IsEmail()\r\n  email: string\r\n}\r\n\r\nexport class EventDate {\r\n  @ApiProperty({\r\n    required: true,\r\n    description:\r\n      'Phải có cả hai trường: dateTime và date .Một trong hai phải bằng null. <h3> date dành cho Event cả ngày. dateTime dành cho Event có giờ giấc </h3>',\r\n    example: 'Có thể là dạng ISO: 2023-01-17T02:34:01.000Z or UTC: 2023-04-27T10:00:00+07:00 or 2023-01-17 '\r\n  })\r\n  // @IsDateString({\r\n  //   message: 'dateTime must be a date string'\r\n  // })\r\n  @IsOptional()\r\n  dateTime: string\r\n\r\n  @ApiProperty({\r\n    required: true,\r\n    description:\r\n      'Phải có cả hai trường: dateTime và date.Một trong hai phải bằng null. <h3> date dành cho Event cả ngày. dateTime dành cho Event có giờ giấc </h3>',\r\n    example: 'Có thể là dạng ISO: 2023-01-17T02:34:01.000Z or UTC: 2023-04-27T10:00:00+07:00 or 2023-01-17'\r\n  })\r\n  // @IsDateString({\r\n  //   message: 'date must be a date string'\r\n  // })\r\n  @IsOptional()\r\n  date: string\r\n\r\n  @ApiPropertyOptional({\r\n    description: 'Mặc định bằng Asia/Ho_Chi_Minh',\r\n    example: 'Asia/Ho_Chi_Minh'\r\n  })\r\n  @IsString({\r\n    message: 'timeZone must be a string'\r\n  })\r\n  @IsOptional()\r\n  timeZone: string\r\n}\r\n\r\nexport class EventMetaData {\r\n  @ApiProperty({ required: false, description: 'CALI' })\r\n  @IsString({ message: 'Room name must be a string' })\r\n  @IsOptional()\r\n  name?: string\r\n\r\n  @ApiProperty({ required: true, description: 'room_id' })\r\n  @IsNotEmpty({ message: 'room_id is required, phỏng vấn online, room_id = \"null\" ' })\r\n  room_id?: string\r\n\r\n  @ApiPropertyOptional({ description: 'creator_id' })\r\n  @IsOptional()\r\n  creator_id?: string\r\n\r\n  @ApiPropertyOptional({ description: 'creator_email' })\r\n  @IsOptional()\r\n  creator_email?: string\r\n\r\n  @ApiPropertyOptional({ description: 'attendee_ids' })\r\n  @IsOptional()\r\n  attendees_id?: string\r\n\r\n  @ApiPropertyOptional({ description: 'candidate_id' })\r\n  @IsOptional()\r\n  candidate_id?: string\r\n}\r\n\r\nexport class Creator {\r\n  @IsOptional()\r\n  @IsEmail()\r\n  email?: string\r\n\r\n  @IsOptional()\r\n  id?: string\r\n}\r\n\r\nexport class CreateGoogleEventReq {\r\n  @ApiProperty({\r\n    description:\r\n      'Không phải mã hex, colorId là số nguyên thuộc [0-11]. Gọi api: /api/calendar/color để lấy danh sách mã màu',\r\n    example: '5'\r\n  })\r\n  @Matches(/^([0-9]|1[01])$/, { message: 'colorId must be a number in [0-11]' })\r\n  colorId?: string\r\n\r\n  @ApiProperty({ required: true, description: 'Title of Event', example: 'Event title' })\r\n  @IsNotEmpty({ message: 'Event summary is required' })\r\n  @IsOptional()\r\n  summary?: string\r\n\r\n  @ApiPropertyOptional({ description: 'Description of Events abcef' })\r\n  @IsOptional()\r\n  description?: string\r\n\r\n  @ApiPropertyOptional({ example: 'Hanoi, Vietnam' })\r\n  @IsOptional()\r\n  location?: string\r\n\r\n  @ApiPropertyOptional({ example: 'abc@gmail.com' })\r\n  @IsObject({ message: 'creator must be an object' })\r\n  @IsOptional()\r\n  @Type(() => Creator)\r\n  @ValidateNested()\r\n  creator?: Creator\r\n\r\n  @ApiPropertyOptional({\r\n    description: 'Recurrent of events (RRULE lib: )',\r\n    example: '[RRULE:FREQ=DAILY;COUNT=2;UNTIL=20230117T104400Z] \\n '\r\n  })\r\n  @ArrayNotEmpty()\r\n  @IsString({ each: true })\r\n  @IsOptional()\r\n  recurrence?: string[]\r\n\r\n  @ApiPropertyOptional({\r\n    description: 'Attendees of events',\r\n    example: [\r\n      {\r\n        email: '19020202@vnu.edu.vn'\r\n      }\r\n    ]\r\n  })\r\n  @IsOptional()\r\n  @ValidateNested({ each: true })\r\n  @Type(() => Email)\r\n  @IsArray({\r\n    message: 'attendees must be an array'\r\n  })\r\n  @IsObject({\r\n    each: true\r\n  }) // Exclude for 2d array: [[]]\r\n  attendees: Email[]\r\n\r\n  @ApiProperty({\r\n    required: true,\r\n    description:\r\n      'Phải có một trong hai trường: dateTime hoặc date. Nếu có dateTime thì sẽ không có date. Lưu ý TimeZone',\r\n    example: {\r\n      dateTime: '2021-08-01T09:00:00+07:00',\r\n      timeZone: 'Asia/Ho_Chi_Minh'\r\n    }\r\n  })\r\n  @IsNotEmptyObject()\r\n  @IsObject()\r\n  @Type(() => EventDate)\r\n  @ValidateNested()\r\n  start: EventDate\r\n\r\n  @ApiProperty({\r\n    required: true,\r\n    description:\r\n      'Phải có một trong hai trường: dateTime hoặc date. Nếu có dateTime thì sẽ không có date.Lưu ý TimeZone',\r\n    example: {\r\n      dateTime: '2021-08-01T09:00:00+07:00',\r\n      timeZone: 'Asia/Ho_Chi_Minh'\r\n    }\r\n  })\r\n  @IsNotEmptyObject()\r\n  @IsObject()\r\n  @Type(() => EventDate)\r\n  @ValidateNested()\r\n  end: EventDate\r\n\r\n  @ApiPropertyOptional({\r\n    description: 'Có tạo meeting mới không?',\r\n    example: true\r\n  })\r\n  @IsOptional()\r\n  @IsBoolean()\r\n  is_new_meet: boolean\r\n\r\n  @ApiProperty({\r\n    required: true,\r\n    description: 'Meta của Event. Lưu ý: room_id là bắt buộc',\r\n    example: {\r\n      room_id: '123456789',\r\n      room_name: '1321'\r\n    }\r\n  })\r\n  @IsNotEmptyObject()\r\n  @IsObject()\r\n  @Type(() => EventMetaData)\r\n  @ValidateNested()\r\n  extendedProperties: EventMetaData\r\n}\r\n","import { ApiProperty } from '@nestjs/swagger'\r\nimport { IsEnum, IsNotEmpty } from 'class-validator'\r\n\r\nexport class DeleteEventReq {\r\n  @ApiProperty({\r\n    required: true,\r\n    description: 'Update type: single, all, following'\r\n  })\r\n  @IsEnum(['single', 'all', 'following'], {\r\n    message: 'update_type must be a string in [single, all, following]'\r\n  })\r\n  delete_type: string\r\n}\r\n","import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger'\r\nimport { IsDate, IsDateString, IsNotEmpty, IsOptional, IsString } from 'class-validator'\r\nimport * as moment from 'moment-timezone'\r\n\r\nexport class GetEventReq {\r\n  @ApiProperty({\r\n    description: 'timeMin',\r\n    example: `<div>import * as moment from 'moment-timezone'</div> <br> moment().add(3, 'days').startOf('day').tz('Asia/Ho_Chi_Minh').format() \\n <div> ${moment()\r\n      .add(0, 'days')\r\n      .startOf('day')\r\n      .tz('Asia/Ho_Chi_Minh')\r\n      .format()}\r\n      </div> `\r\n  })\r\n  @IsNotEmpty()\r\n  timeMin: string\r\n\r\n  @ApiProperty({\r\n    description: 'timeMax',\r\n    example: `<div>import * as moment from 'moment-timezone'</div> <br> moment().add(3, 'days').startOf('day').tz('Asia/Ho_Chi_Minh').format() \\n <div> ${moment()\r\n      .add(7, 'days')\r\n      .startOf('day')\r\n      .tz('Asia/Ho_Chi_Minh')\r\n      .format()}\r\n      </div> `\r\n  })\r\n  @IsNotEmpty()\r\n  timeMax: string\r\n\r\n  @ApiPropertyOptional({ description: 'room_id', example: 'room_id' })\r\n  @IsString()\r\n  @IsOptional()\r\n  room_id: string\r\n\r\n  @ApiPropertyOptional({ description: 'creator_id', example: 'creator_id' })\r\n  @IsString()\r\n  @IsOptional()\r\n  creator_id: string\r\n\r\n  @ApiPropertyOptional({ description: 'creator_id', example: 'creator_id' })\r\n  @IsString()\r\n  @IsOptional()\r\n  creator_email: string\r\n\r\n  @ApiPropertyOptional({ description: 'candidate_id', example: 'candidate_id' })\r\n  @IsOptional()\r\n  candidate_id: string\r\n}\r\n","export * from './create-google-event.dto'\r\nexport * from './get-google-events.dto'\r\nexport * from './update-google-event.dto'\r\nexport * from './detele-google-event.dto'","import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger'\r\nimport { CreateGoogleEventReq, EventDate, EventMetaData } from './create-google-event.dto'\r\nimport {\r\n  IsBoolean,\r\n  IsEnum,\r\n  IsNotEmptyObject,\r\n  IsObject,\r\n  IsOptional,\r\n  Matches,\r\n  Max,\r\n  Min,\r\n  ValidateNested\r\n} from 'class-validator'\r\nimport { Type } from 'class-transformer'\r\n\r\nexport class GoogleEventReq$Optional extends CreateGoogleEventReq {\r\n  @ApiPropertyOptional({\r\n    description:\r\n      'Không phải mã hex, colorId là số nguyên thuộc [0-11]. Gọi api: /api/calendar/color để lấy danh sách mã màu',\r\n    example: '0'\r\n  })\r\n  @Matches(/^([0-9]|1[01])$/, {\r\n    message: 'colorId must be a number in [0-11]'\r\n  })\r\n  @IsOptional()\r\n  colorId?: string\r\n\r\n  @ApiPropertyOptional({\r\n    required: true,\r\n    description:\r\n      'Phải có một trong hai trường: dateTime hoặc date. Nếu có dateTime thì sẽ không có date. Lưu ý TimeZone',\r\n    example: {\r\n      dateTime: '2021-08-01T09:00:00+07:00',\r\n      timeZone: 'Asia/Ho_Chi_Minh'\r\n    }\r\n  })\r\n  @IsNotEmptyObject()\r\n  @IsObject()\r\n  @IsOptional()\r\n  @Type(() => EventDate)\r\n  start: EventDate\r\n\r\n  @ApiPropertyOptional({\r\n    required: true,\r\n    description:\r\n      'Phải có một trong hai trường: dateTime hoặc date. Nếu có dateTime thì sẽ không có date.Lưu ý TimeZone',\r\n    example: {\r\n      dateTime: '2021-08-01T09:30:00+07:00',\r\n      timeZone: 'Asia/Ho_Chi_Minh'\r\n    }\r\n  })\r\n  @IsNotEmptyObject()\r\n  @IsObject()\r\n  @IsOptional()\r\n  @Type(() => EventDate)\r\n  end: EventDate\r\n\r\n  @ApiProperty({\r\n    required: true,\r\n    description: 'Title of Event',\r\n    example: 'Event title'\r\n  })\r\n  @IsOptional()\r\n  summary?: string\r\n\r\n  @ApiPropertyOptional({\r\n    description: 'Có xóa meet hay không',\r\n    example: true\r\n  })\r\n  @IsOptional()\r\n  @IsBoolean()\r\n  is_remove_meet?: boolean\r\n\r\n  @ApiProperty({\r\n    required: true,\r\n    description: 'Meta của Event. Lưu ý: room_id là bắt buộc',\r\n    example: {\r\n      room_id: '123456789',\r\n      room_name: '1321'\r\n    }\r\n  })\r\n  @IsObject()\r\n  @Type(() => EventMetaData)\r\n  @ValidateNested()\r\n  @IsOptional()\r\n  extendedProperties: EventMetaData\r\n\r\n  @ApiProperty({\r\n    required: true,\r\n    description:\r\n      'single: chỉ update event này, all: update tất cả các instance event, follow: update tất cả các event sau event này',\r\n    example: 'single | all | following'\r\n  })\r\n  @IsEnum(['single', 'all', 'following'], {\r\n    message: 'update_type must be a string in [single, all, following]'\r\n  })\r\n  update_type: string\r\n}\r\n\r\nexport class UpdateGoogleEventReq extends GoogleEventReq$Optional {}\r\n","import { Body, Controller, Delete, Get, HttpStatus, Inject, Param, Post, Put, Query, UseGuards } from '@nestjs/common'\r\nimport { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger'\r\nimport { Logger } from 'winston'\r\nimport { response } from '../../utils'\r\nimport { EventDatePipe } from '../../utils/pipe'\r\nimport { JwtAuthGuard } from '../authentication/guard/jwt.guard'\r\nimport { AuthUser, PermisionUpdate } from '../authentication/guard/role.guard'\r\nimport { CreateGoogleEventReq, DeleteEventReq, GetEventReq, UpdateGoogleEventReq } from './dto'\r\nimport { GoogleCalendarService } from './gcanlendar.service'\r\nimport { User } from './types/auth.user'\r\n\r\n@ApiTags('Google Calendar')\r\n@Controller('calendar')\r\nexport class GoogleCalendarController {\r\n  constructor(\r\n    @Inject('winston') private readonly logger: Logger,\r\n    private readonly gcanlendarService: GoogleCalendarService\r\n  ) {}\r\n\r\n  @ApiOperation({ summary: 'Get All calendar events', description: 'Get calendar events' })\r\n  @ApiResponse({ status: HttpStatus.OK, description: 'Get calendar events', type: [CreateGoogleEventReq] })\r\n  // @UseGuards(JwtAuthGuard)\r\n  @Get('event')\r\n  async getCalendarEvents(@Query() query: GetEventReq) {\r\n    return response(await this.gcanlendarService.getEventsService(query))\r\n  }\r\n\r\n  @ApiOperation({ summary: 'Get event detail by id', description: 'Get calendar event by id' })\r\n  @ApiResponse({ status: HttpStatus.OK, type: CreateGoogleEventReq })\r\n  // @UseGuards(JwtAuthGuard)\r\n  @Get('event/:eventId')\r\n  async getCalendarEventById(@Param('eventId') eventId: string) {\r\n    return response(await this.gcanlendarService.getCalendarEventByIdService(eventId))\r\n  }\r\n\r\n  @ApiOperation({ summary: 'Update Event' })\r\n  @ApiResponse({ status: HttpStatus.OK, type: CreateGoogleEventReq })\r\n  // @UseGuards(PermisionUpdate())\r\n  // @UseGuards(JwtAuthGuard)\r\n  @Put('/event/:eventId')\r\n  async updateEvent(@Param('eventId') eventId: string, @Body(new EventDatePipe()) event: UpdateGoogleEventReq) {\r\n    return response(await this.gcanlendarService.updateEventService(eventId, event))\r\n  }\r\n\r\n  @ApiResponse({ status: HttpStatus.OK, type: CreateGoogleEventReq })\r\n  @ApiOperation({ summary: 'Create Google calendar event', description: 'Create Google calendar event' })\r\n  // @UseGuards(JwtAuthGuard)\r\n  @Post('/event')\r\n  async createEvents(@Body(new EventDatePipe()) event: CreateGoogleEventReq, @AuthUser() user: User) {\r\n    return response(await this.gcanlendarService.createEventsService(event, user))\r\n  }\r\n\r\n  @Get('/authorize')\r\n  @ApiOperation({ summary: 'API for Admin only' })\r\n  async authorizeGoogle() {\r\n    return response(await this.gcanlendarService.authorize())\r\n  }\r\n\r\n  @Get('/color')\r\n  @ApiOperation({ summary: 'Get available Calendar list colors' })\r\n  async getAvailableColor() {\r\n    return response(await this.gcanlendarService.getColorEventService())\r\n  }\r\n\r\n  @ApiOperation({ summary: 'Delete event' })\r\n  // @UseGuards(PermisionUpdate())\r\n  // @UseGuards(JwtAuthGuard)\r\n  @Delete('event/:eventId')\r\n  async deleteEvent(@Param('eventId') eventId: string, @Query() query: DeleteEventReq) {\r\n    return response(await this.gcanlendarService.deleteEventService(eventId, query))\r\n  }\r\n\r\n  // @UseGuards(JwtAuthGuard)\r\n  @Get('event/instance/:eventId')\r\n  @ApiOperation({ summary: 'Get all instances of the specified recurring event' })\r\n  async getRecurrenceInstances(@Param('eventId') eventId: string) {\r\n    return response(await this.gcanlendarService.getInstanceOfRecurrenceService(eventId))\r\n  }\r\n\r\n  @Get('oauth2callback')\r\n  async oauth2callback(@Query('code') code: string) {\r\n    return response(await this.gcanlendarService.oauth2callback(code))\r\n  }\r\n}\r\n","import { Module } from '@nestjs/common'\r\nimport { GoogleCalendarController } from './gcanlendar.controller'\r\nimport { GoogleCalendarService } from './gcanlendar.service'\r\nimport { AuthModule } from '../authentication/auth.module'\r\n\r\n@Module({\r\n  imports: [AuthModule],\r\n  controllers: [GoogleCalendarController],\r\n  providers: [GoogleCalendarService],\r\n  exports: []\r\n})\r\nexport class GoogleCalendarModule {}\r\n","import { Inject, Injectable } from '@nestjs/common'\r\nimport { ConfigService } from '@nestjs/config'\r\nimport { randomUUID } from 'crypto'\r\nimport { promises as fs } from 'fs'\r\nimport { OAuth2Client } from 'google-auth-library'\r\nimport { calendar_v3, google } from 'googleapis'\r\nimport * as _ from 'lodash'\r\nimport * as path from 'path'\r\nimport { RRule } from 'rrule'\r\nimport { Logger } from 'winston'\r\nimport {\r\n  ExceptionBadRequest,\r\n  ExceptionForbidden,\r\n  ExceptionNotFound,\r\n  ExceptionUnauthorized\r\n} from '../../exception/controlled.exception'\r\nimport { ServerError } from '../../exception/internal-error.exception'\r\nimport { DeleteType, GoogleAuthError, GoogleError, Status, UpdateType, VN, message } from '../../types'\r\nimport { date_add_milisecond, date_diff, date_sort_asc, date_substract } from '../../utils/helper'\r\nimport { CreateGoogleEventReq, GetEventReq, UpdateGoogleEventReq } from './dto'\r\nimport { User } from './types/auth.user'\r\nimport { DeleteEventReq } from './dto/detele-google-event.dto'\r\n\r\nexport type Event = calendar_v3.Schema$Event\r\nexport type Calendar = calendar_v3.Calendar\r\n\r\n@Injectable()\r\nexport class GoogleCalendarService {\r\n  private calendar: Calendar\r\n  private calendarId: string\r\n  private TOKEN_PATH: string\r\n  private CREDENTIALS_PATH: string\r\n  private oAuth2Client: OAuth2Client\r\n\r\n  constructor(private configService: ConfigService, @Inject('winston') private readonly logger: Logger) {\r\n    this.TOKEN_PATH = path.join(process.cwd(), 'token.json')\r\n    this.CREDENTIALS_PATH = path.join(process.cwd(), 'credentials.json')\r\n    this.calendarId = this.configService.get('GOOGLE_CALANDER_ID')\r\n    this.oAuth2Client = new OAuth2Client(\r\n      this.configService.get('GOOGLE_CLIENT_ID'),\r\n      this.configService.get('GOOGLE_CLIENT_SECRET'),\r\n      this.configService.get('GOOGLE_REDIRECT_URL')\r\n    )\r\n  }\r\n\r\n  async oauth2callback(code: string) {\r\n    try {\r\n      const r = await this.oAuth2Client.getToken(code)\r\n      this.oAuth2Client.setCredentials(r.tokens)\r\n      this.calendar = google.calendar({ version: 'v3', auth: this.oAuth2Client })\r\n      await this.saveCredentials(r.tokens)\r\n      this.logger.info('oauth2callback() OK', r.tokens)\r\n    } catch (error) {\r\n      this.logger.error('oauth2callback() FAIL', error)\r\n      throw new ServerError(error)\r\n    }\r\n  }\r\n\r\n  async loadSavedCredentialsIfExist() {\r\n    try {\r\n      const content = await fs.readFile(this.TOKEN_PATH, 'ascii')\r\n      return JSON.parse(content)\r\n    } catch (error) {\r\n      this.logger.error('loadSavedCredentialsIfExist() FAIL', error)\r\n      return null\r\n    }\r\n  }\r\n\r\n  async saveCredentials(token) {\r\n    await fs.writeFile(this.TOKEN_PATH, JSON.stringify(token))\r\n  }\r\n\r\n  async authorize() {\r\n    try {\r\n      const savedToken = await this.loadSavedCredentialsIfExist()\r\n      if (savedToken) {\r\n        this.oAuth2Client.setCredentials(savedToken)\r\n        if (savedToken.expiry_date < Date.now()) {\r\n          const newToken = await this.oAuth2Client.refreshAccessToken()\r\n          await this.saveCredentials(newToken.credentials)\r\n          this.logger.info('Token expired, refreshing token', { newToken: newToken.credentials })\r\n          this.oAuth2Client.setCredentials(newToken.credentials)\r\n        }\r\n        this.calendar = google.calendar({ version: 'v3', auth: this.oAuth2Client })\r\n        return message.GOOGLE_AUTHORIZED\r\n      }\r\n\r\n      this.logger.info('Authorizing Google Calendar,...', { path: this.CREDENTIALS_PATH })\r\n      const authorizeUrl = this.oAuth2Client.generateAuthUrl({\r\n        access_type: 'offline',\r\n        scope: 'https://www.googleapis.com/auth/calendar'\r\n      })\r\n      return authorizeUrl\r\n    } catch (error) {\r\n      this.logger.error('Google Calendar Authorize Fail', error)\r\n      throw new ServerError({\r\n        message: 'Google Calendar Authorize Fail !'\r\n      })\r\n    }\r\n  }\r\n\r\n  async googleExceptionHandler(error: any, message?: string | object): Promise<any> {\r\n    if ([404, 410].includes(error.code)) {\r\n      throw new ExceptionNotFound(message)\r\n    }\r\n    if ([403].includes(error.status)) {\r\n      throw new ExceptionForbidden(message)\r\n    }\r\n    if ([400].includes(error.code || error.status)) {\r\n      throw error\r\n    }\r\n\r\n    if (!this.calendar || !this.oAuth2Client) {\r\n      throw new ExceptionUnauthorized('Unauthorized, Please re-auth with Google Calendar')\r\n    }\r\n\r\n    if (GoogleAuthError.includes(error.message)) {\r\n      this.logger.error('Refresh Token invalid, Remove Token File, Try to re-auth')\r\n      await fs.unlink(this.TOKEN_PATH)\r\n      this.oAuth2Client = null\r\n      this.authorize()\r\n    }\r\n\r\n    if (error.message === GoogleError.LIMIT_EXCEEDED) {\r\n      throw new ExceptionBadRequest({\r\n        message: 'Limit Exceeded'\r\n      })\r\n    }\r\n    throw new ServerError(message)\r\n  }\r\n\r\n  async createEventsService(event: CreateGoogleEventReq, user?: User): Promise<Event> {\r\n    try {\r\n      await this.authorize()\r\n\r\n      if (user?.id) {\r\n        event.extendedProperties.creator_id = user?.id\r\n      }\r\n\r\n      const res = await this.calendar.events.insert({\r\n        calendarId: this.calendarId,\r\n        sendUpdates: 'all',\r\n        conferenceDataVersion: 1,\r\n        requestBody: {\r\n          colorId: event.colorId.toString(),\r\n          summary: event.summary,\r\n          location: event.location,\r\n          description: event.description,\r\n          recurrence: event.recurrence,\r\n          creator: event.creator,\r\n          start: { ...event.start, timeZone: VN },\r\n          end: { ...event.end, timeZone: VN },\r\n          attendees: event.attendees || [],\r\n          reminders: {\r\n            useDefault: false,\r\n            overrides: [{ method: 'email', minutes: 30 }]\r\n          },\r\n          conferenceData: event.is_new_meet && {\r\n            createRequest: {\r\n              conferenceSolutionKey: { type: 'hangoutsMeet' },\r\n              requestId: randomUUID()\r\n            }\r\n          },\r\n          extendedProperties: {\r\n            private: { ...event?.extendedProperties }\r\n          }\r\n        }\r\n      })\r\n\r\n      return res.data\r\n    } catch (error) {\r\n      this.logger.error(error)\r\n      return this.googleExceptionHandler(error, {\r\n        info: 'Error: create event failed!',\r\n        detail: error?.message\r\n      })\r\n    }\r\n  }\r\n\r\n  async getInstanceOfRecurrenceService(eventId: string): Promise<Event[]> {\r\n    try {\r\n      await this.authorize()\r\n      const eventInstance = await this.calendar.events.instances({\r\n        eventId: eventId,\r\n        calendarId: this.calendarId\r\n      })\r\n      return eventInstance.data.items.sort((a, b) => {\r\n        return date_sort_asc(\r\n          a.originalStartTime?.date || a.originalStartTime?.dateTime,\r\n          b.originalStartTime?.date || b.originalStartTime?.dateTime\r\n        )\r\n      })\r\n    } catch (error) {\r\n      this.logger.error('getInstanceOfRecurrenceService()', error)\r\n      return this.googleExceptionHandler(error, 'Get instance of recurrence event failed')\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param getReq\r\n   * @description Get all events in range time\r\n   */\r\n  async getEventsService(getReq: GetEventReq): Promise<Event[]> {\r\n    try {\r\n      const { room_id, creator_id, creator_email, candidate_id } = getReq\r\n      await this.authorize()\r\n      const request = {\r\n        calendarId: this.calendarId,\r\n        timeMin: getReq.timeMin,\r\n        timeMax: getReq.timeMax,\r\n        timeZone: 'Asia/Ho_Chi_Minh',\r\n        showDeleted: false,\r\n        singleEvents: true,\r\n        privateExtendedProperty: [\r\n          room_id && room_id !== 'all' && `room_id=${room_id}`,\r\n          creator_email && `creator_email=${creator_email}`,\r\n          candidate_id && `candidate_id=${candidate_id}`\r\n        ].filter((e) => e)\r\n      }\r\n\r\n      let res = (await this.calendar.events.list(request)).data.items\r\n\r\n      if (creator_id) {\r\n        res = res.filter((event: Event) => {\r\n          const isCreator = event?.extendedProperties?.private?.creator_id === creator_id\r\n          const isAttendee = event?.extendedProperties?.private?.attendees_id?.split(',').includes(creator_id)\r\n          if (isCreator || isAttendee) {\r\n            return this.event(event)\r\n          }\r\n        })\r\n      }\r\n\r\n      return res.filter((event: Event) => {\r\n        if (room_id === 'all' || getReq.candidate_id || room_id === 'null') {\r\n          return this.event(event)\r\n        }\r\n        if (room_id !== 'all' && event?.extendedProperties?.private?.room_id !== 'null') {\r\n          return this.event(event)\r\n        }\r\n      })\r\n    } catch (error) {\r\n      this.logger.error('getEventsService()', error)\r\n      return this.googleExceptionHandler(error, 'Get events failed')\r\n    }\r\n  }\r\n\r\n  async getCalendarEventByIdService(eventId: string): Promise<Event> {\r\n    try {\r\n      await this.authorize()\r\n      const res = await this.calendar.events.get({\r\n        calendarId: this.calendarId,\r\n        eventId: eventId\r\n      })\r\n      return res.data\r\n    } catch (error) {\r\n      this.logger.error('getCalendarEventByIdService()', error)\r\n      return this.googleExceptionHandler(error, 'Event not found')\r\n    }\r\n  }\r\n\r\n  async getColorEventService() {\r\n    try {\r\n      await this.authorize()\r\n      const res = await this.calendar.colors.get()\r\n      return res.data.calendar\r\n    } catch (error) {\r\n      this.logger.error(error)\r\n      return this.googleExceptionHandler(error, 'Error: get color event failed')\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param id\r\n   * @param updateEventReq\r\n   * @description\r\n   * updateSingleEventService(): update a SINGLE event\r\n   * updateAllEventService(): update ALL instances of recurring event\r\n   * updateFollowingEventService(): update all followed instances of recurring event\r\n   * @returns\r\n   */\r\n  async updateEventService(id: string, updateEventReq: UpdateGoogleEventReq): Promise<Event | Event[]> {\r\n    try {\r\n      await this.authorize()\r\n      const event = await this.getCalendarEventByIdService(id)\r\n      if (!event) {\r\n        throw new ExceptionNotFound('Event not found')\r\n      }\r\n\r\n      // Copy of updateEventReq and remove some fields\r\n      const newEvent: Event = _.omit(Object.assign({}, updateEventReq), ['extendedProperties', 'recurrence'])\r\n\r\n      // Remove meeting\r\n      if (updateEventReq?.is_remove_meet) {\r\n        newEvent.conferenceData = null\r\n        if (!event.conferenceData) {\r\n          newEvent.conferenceData = {\r\n            createRequest: {\r\n              conferenceSolutionKey: {\r\n                type: 'hangoutsMeet'\r\n              },\r\n              requestId: randomUUID()\r\n            }\r\n          }\r\n        }\r\n      }\r\n      // Create new meeting\r\n      if (updateEventReq.is_new_meet) {\r\n        newEvent.conferenceData = {\r\n          createRequest: {\r\n            conferenceSolutionKey: {\r\n              type: 'hangoutsMeet'\r\n            },\r\n            requestId: randomUUID()\r\n          }\r\n        }\r\n      }\r\n\r\n      // Make sure that creator_id is not changed event if User is Admin\r\n      if (undefined !== updateEventReq.extendedProperties) {\r\n        updateEventReq.extendedProperties.creator_id = event?.extendedProperties?.private?.creator_id\r\n      }\r\n\r\n      // Main Logic\r\n      switch (updateEventReq.update_type) {\r\n        case UpdateType.SINGLE:\r\n          return this.updateSingleEventService(id, updateEventReq, event, newEvent)\r\n        case UpdateType.ALL:\r\n          return this.updateAllEventService(id, updateEventReq, event, newEvent)\r\n        case UpdateType.FOLLOWING:\r\n          return this.updateFollowedEventService(id, updateEventReq, event, newEvent)\r\n      }\r\n    } catch (error) {\r\n      this.logger.error('updateEventService()', error)\r\n      return this.googleExceptionHandler(error, 'Update event failed')\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param newEvent - Copy of updateEventReq and remove some fields\r\n   * @description Update a single event\r\n   * 1. Update basic info (info that not relate to Recurrence) of orginal Single Event.\r\n   *    - date or dateTime:  One of them must be NULL:\r\n   * 2. Update instance of recurring event.\r\n   * 3. Update orignal Single Event to be a Recurring event (Add RRULE).\r\n   * 4. Update Recurring event to be a Single Event (Remove Recurrence)\r\n   *    - recurrence must = NULL\r\n   */\r\n  async updateSingleEventService(\r\n    id: string,\r\n    updateEventReq: UpdateGoogleEventReq,\r\n    orginalEvent: Event,\r\n    newEvent: Event\r\n  ): Promise<Event> {\r\n    try {\r\n      await this.authorize()\r\n      if (orginalEvent.recurrence) {\r\n        throw new ExceptionBadRequest('This is not a Single Event. Use update_type equal ALL or FOLLOWING instead')\r\n      }\r\n\r\n      // 3.\r\n      if (!orginalEvent?.recurringEventId && updateEventReq?.recurrence) {\r\n        this.logger.info('3. Update orignal Single Event to be a Recurring event (Add RRULE)')\r\n        newEvent.recurrence = updateEventReq.recurrence\r\n      }\r\n\r\n      // 4.\r\n      if (orginalEvent?.recurringEventId && updateEventReq?.recurrence === null) {\r\n        this.logger.info('4. Update Recurring event to be a Single Event (Remove Recurrence)')\r\n        newEvent.recurrence = null\r\n        newEvent.start = orginalEvent.start\r\n        newEvent.end = orginalEvent.end\r\n        id = id.split('_')[0]\r\n      }\r\n\r\n      this.logger.info('LOG', {\r\n        ...orginalEvent,\r\n        ...newEvent\r\n      })\r\n      // 1. + 2.\r\n      const res = await this.calendar.events.patch({\r\n        calendarId: this.calendarId,\r\n        conferenceDataVersion: 1,\r\n        eventId: id,\r\n        sendNotifications: true,\r\n        requestBody: {\r\n          ...orginalEvent,\r\n          ...newEvent,\r\n          summary: `Update-${new Date().toLocaleTimeString(undefined, { timeZone: VN })}`,\r\n          extendedProperties: {\r\n            private: {\r\n              ...orginalEvent?.extendedProperties?.private,\r\n              ...updateEventReq?.extendedProperties\r\n            }\r\n          }\r\n        }\r\n      })\r\n\r\n      return res.data\r\n    } catch (error) {\r\n      this.logger.error('updateSingleEventService()', error)\r\n      return this.googleExceptionHandler(error, 'Update event failed')\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param id\r\n   * @param updateEventReq\r\n   * @param orginalEvent\r\n   * @param newEvent\r\n   * @description\r\n   * 1. Update recurrence event - root Event (not the first instance)\r\n   */\r\n  async updateAllEventService(\r\n    id: string,\r\n    updateEventReq: UpdateGoogleEventReq,\r\n    orginalEvent: Event,\r\n    newEvent: Event\r\n  ): Promise<Event> {\r\n    try {\r\n      await this.authorize()\r\n\r\n      const rootId = id.split('_')[0]\r\n      let instanceEvent: Event\r\n\r\n      if (id.includes('_')) {\r\n        // Not the root event\r\n        instanceEvent = Object.assign({}, orginalEvent)\r\n        orginalEvent = await this.getCalendarEventByIdService(rootId)\r\n      } else {\r\n        instanceEvent = Object.assign({}, orginalEvent)\r\n      }\r\n\r\n      // 1. Update recurrence event - root Event (not the first instance)\r\n      newEvent.recurrence = updateEventReq.recurrence\r\n\r\n      if (newEvent.start) {\r\n        const { status, value } = date_diff(newEvent.start.dateTime, instanceEvent.start.dateTime)\r\n        newEvent.start.dateTime = date_add_milisecond(orginalEvent.start.dateTime, value)\r\n      }\r\n\r\n      if (newEvent.end) {\r\n        const { status, value } = date_diff(newEvent.end.dateTime, instanceEvent.end.dateTime)\r\n        newEvent.end.dateTime = date_add_milisecond(orginalEvent.end.dateTime, value)\r\n      }\r\n\r\n      const res = await this.calendar.events.patch({\r\n        calendarId: this.calendarId,\r\n        conferenceDataVersion: 1,\r\n        eventId: rootId,\r\n        sendNotifications: true,\r\n        requestBody: {\r\n          ...orginalEvent,\r\n          ...newEvent,\r\n          extendedProperties: {\r\n            private: {\r\n              ...orginalEvent?.extendedProperties?.private,\r\n              ...updateEventReq?.extendedProperties\r\n            }\r\n          }\r\n        }\r\n      })\r\n      return res.data\r\n    } catch (error) {\r\n      this.logger.error('updateAllEventService()', error)\r\n      return this.googleExceptionHandler(error, 'Update event failed')\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param newEvent - Copy of updateEventReq and remove some fields\r\n   * @description Update Followed instances of recurring event\r\n   * 1. Check if it's is THE FIRST instance of recurring event, (don't create new recurrence event)\r\n   *\r\n   * 2. Update basic info of  Single Event (don't create new recurrence event) if:\r\n   * -  Update END TIME only (end.dateTime, end.date),\r\n   * -  Update summary, color, attendees, meeting, ...\r\n   *\r\n   * 3. Update instances of recurring event (not the first instance), have to CREATE new recurrence event if:\r\n   *   - Update All day -> one day, vice versa\r\n   *   - Update START TIME only  (start.dateTime, start.date). If no recurrence provided, add COUNT in RRULE\r\n   *   - Update new recurrence RRULE\r\n   */\r\n  async updateFollowedEventService(\r\n    id: string,\r\n    updateEventReq: UpdateGoogleEventReq,\r\n    originalEvent: Event,\r\n    newEvent: Event\r\n  ): Promise<Event | Event[]> {\r\n    try {\r\n      await this.authorize()\r\n      if (!id.includes('_')) {\r\n        throw new ExceptionBadRequest(\r\n          'This is not a instance of Recurring Event. Use update_type equal ALL or SINGLE instead'\r\n        )\r\n      }\r\n\r\n      const recurrenEvent = await this.getCalendarEventByIdService(originalEvent.recurringEventId)\r\n\r\n      if (!recurrenEvent) {\r\n        throw new ExceptionNotFound('Recurring Event not found')\r\n      }\r\n\r\n      if (updateEventReq.recurrence === null || updateEventReq.recurrence?.length === 0) {\r\n        throw new ExceptionBadRequest(\r\n          'Recurrence == NULL can not be used with update_type == FOLLOWING, use SINGLE instead'\r\n        )\r\n      }\r\n\r\n      const instanceOfRecurringEvent = await this.getInstanceOfRecurrenceService(originalEvent.recurringEventId)\r\n\r\n      const followedEvents = instanceOfRecurringEvent.filter((event: Event) => {\r\n        return (\r\n          date_sort_asc(\r\n            event.originalStartTime.date || event.originalStartTime.dateTime,\r\n            originalEvent.originalStartTime.date || originalEvent.originalStartTime.dateTime\r\n          ) === 1\r\n        )\r\n      })\r\n\r\n      if (!instanceOfRecurringEvent || instanceOfRecurringEvent?.length === 0) {\r\n        throw new ExceptionNotFound('Recurring Event not found')\r\n      }\r\n\r\n      // 1.\r\n      if (instanceOfRecurringEvent[0].id === originalEvent.id) {\r\n        this.logger.info(\r\n          '1. Check if event is the first instance of recurring event %s',\r\n          originalEvent.recurringEventId\r\n        )\r\n        if (recurrenEvent) {\r\n          const res = await this.calendar.events.patch({\r\n            calendarId: this.calendarId,\r\n            conferenceDataVersion: 1,\r\n            eventId: originalEvent.recurringEventId,\r\n            sendNotifications: true,\r\n            requestBody: {\r\n              ...recurrenEvent,\r\n              ...newEvent,\r\n              recurrence: updateEventReq?.recurrence || recurrenEvent.recurrence,\r\n              summary: `Update-${new Date().toLocaleTimeString()}`,\r\n              extendedProperties: {\r\n                private: {\r\n                  ...recurrenEvent?.extendedProperties?.private,\r\n                  ...updateEventReq?.extendedProperties\r\n                }\r\n              }\r\n            }\r\n          })\r\n          return res.data\r\n        }\r\n      }\r\n\r\n      // 3.\r\n      const update_status = this.isCreateRecurrenEvent(originalEvent, updateEventReq, recurrenEvent)\r\n      if (update_status.result) {\r\n        this.logger.info(\r\n          '3. Update an instance of recurring event that is not the first instance, update current Rule and CREATE new one'\r\n        )\r\n        const currentRule = RRule.fromString(recurrenEvent.recurrence[0])\r\n        const updatedRule = new RRule({\r\n          ...currentRule.options,\r\n          dtstart: null,\r\n          count: null,\r\n          byhour: null,\r\n          byminute: null,\r\n          bysecond: null,\r\n          until: date_substract(originalEvent, 1)\r\n        }).toString()\r\n        await this.updateAllEventService(id, { recurrence: [updatedRule] } as UpdateGoogleEventReq, recurrenEvent, {})\r\n\r\n        this.logger.info('Create new recurrence event')\r\n        const newRule = new RRule({\r\n          ...RRule.fromString(updatedRule).options,\r\n          count: followedEvents.length,\r\n          until: null,\r\n          dtstart: null,\r\n          byhour: null,\r\n          byminute: null,\r\n          bysecond: null\r\n        }).toString()\r\n\r\n        const newRecurrenceEvent: CreateGoogleEventReq = {\r\n          recurrence: [newRule],\r\n          ...originalEvent,\r\n          ...updateEventReq,\r\n          extendedProperties: {\r\n            ...originalEvent?.extendedProperties.private\r\n          }\r\n        }\r\n        return await this.createEventsService(newRecurrenceEvent)\r\n      }\r\n\r\n      /** 2.\r\n       * If update request has end time !== NULL, check if it's diff from original event end time\r\n       * True: Add amount of time diff to all followed events\r\n       * False: Do nothing\r\n       */\r\n      if (!update_status.result) {\r\n        let time_diff = 0\r\n        delete newEvent.recurrence\r\n        delete newEvent.start\r\n\r\n        this.logger.info('2. Update basic info of Single Event')\r\n\r\n        if (newEvent.end) {\r\n          const { status, value } = date_diff(newEvent.end.dateTime, originalEvent.start.dateTime)\r\n          if (true === status) {\r\n            time_diff = value\r\n          }\r\n        }\r\n\r\n        const promiseChain = followedEvents.map(async (event: Event, index: number) => {\r\n          return new Promise((resolve) => {\r\n            setTimeout(resolve, 700 * index)\r\n          }).then(() => {\r\n            if (Math.abs(time_diff) > 0) {\r\n              newEvent.end.dateTime = date_add_milisecond(event.start.dateTime, time_diff)\r\n            }\r\n            return this.updateSingleEventService(event.id, updateEventReq, event, newEvent)\r\n          })\r\n        })\r\n\r\n        return await Promise.allSettled(promiseChain)\r\n      }\r\n    } catch (error) {\r\n      this.logger.error('updateFollowedEventService()', error)\r\n      return this.googleExceptionHandler(error, 'Update followed event failed')\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param query delete TYPE\r\n   * @description\r\n   * 1. Delete single event\r\n   * 2. Delete all events\r\n   * 3. Delete this and all following events\r\n   * -\r\n   * @returns\r\n   */\r\n  async deleteEventService(eventId: string, query: DeleteEventReq): Promise<string> {\r\n    try {\r\n      await this.authorize()\r\n      const event = await this.getCalendarEventByIdService(eventId)\r\n\r\n      if (!event) {\r\n        throw new ExceptionBadRequest('Event not found')\r\n      }\r\n\r\n      if (DeleteType.FOLLOWING === query.delete_type) {\r\n        if (undefined === event.recurringEventId) {\r\n          throw new ExceptionBadRequest('Event is not a recurrence event, use ALL or SINGLE instead')\r\n        }\r\n        const recurrenEvent = await this.getCalendarEventByIdService(event.recurringEventId)\r\n\r\n        if (!recurrenEvent) {\r\n          throw new ExceptionBadRequest('Recurrence event not found')\r\n        }\r\n\r\n        const currentRule = RRule.fromString(recurrenEvent.recurrence[0])\r\n        const updatedRule = new RRule({\r\n          ...currentRule.options,\r\n          dtstart: null,\r\n          count: null,\r\n          byhour: null,\r\n          byminute: null,\r\n          bysecond: null,\r\n          until: date_substract(event, 1)\r\n        }).toString()\r\n\r\n        await this.updateAllEventService(\r\n          event.recurringEventId,\r\n          { recurrence: [updatedRule] } as UpdateGoogleEventReq,\r\n          recurrenEvent,\r\n          {}\r\n        )\r\n      }\r\n\r\n      if (DeleteType.ALL === query.delete_type) {\r\n        if (undefined !== event.recurringEventId) {\r\n          await this.calendar.events.delete({\r\n            calendarId: this.calendarId,\r\n            eventId: event.recurringEventId\r\n          })\r\n        } else {\r\n          await this.calendar.events.delete({\r\n            calendarId: this.calendarId,\r\n            eventId: event.id\r\n          })\r\n        }\r\n      }\r\n\r\n      if (DeleteType.SINGLE === query.delete_type) {\r\n        await this.calendar.events.delete({\r\n          calendarId: this.calendarId,\r\n          eventId: event.id\r\n        })\r\n      }\r\n      return 'Delete event successfully'\r\n    } catch (error) {\r\n      this.logger.error(error)\r\n      return this.googleExceptionHandler(error, 'Error: remove event failed')\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @return {Status}\r\n   * @description check if it's need to create new Recurrence Event if:\r\n   * 1. New start Time\r\n   * 2. All day event -> one day event\r\n   * 3. One day event -> all day event\r\n   * 4. New Recurrence\r\n   */\r\n  private isCreateRecurrenEvent(\r\n    orignalEvent: Event,\r\n    updateRequest: UpdateGoogleEventReq,\r\n    recurrenceEvent: Event\r\n  ): Status {\r\n    try {\r\n      const isNoStartTime = !updateRequest.start?.dateTime && !updateRequest.start?.date\r\n      const isNoRecurrence = !updateRequest?.recurrence\r\n\r\n      if (isNoStartTime && isNoRecurrence) {\r\n        return { result: false, message: 'No need to create new recurrence event' }\r\n      }\r\n      // 4. New Recurrence\r\n      const isNewRules =\r\n        updateRequest.recurrence &&\r\n        JSON.stringify(updateRequest.recurrence)?.split('').sort().join('') !==\r\n          JSON.stringify(recurrenceEvent.recurrence || updateRequest.recurrence)\r\n            ?.split('')\r\n            .sort()\r\n            .join('')\r\n\r\n      if (isNewRules) {\r\n        this.logger.info('new_recurrence')\r\n        return { result: true, message: UpdateType.RECURRENCE }\r\n      }\r\n\r\n      // 2. All day event -> one day event\r\n      const isAllDayEvent = orignalEvent.start?.dateTime && updateRequest.start?.date\r\n      if (isAllDayEvent) return { result: true, message: UpdateType.ALLDAY }\r\n\r\n      // 3. One day event -> all day event\r\n      const isOneDayEvent = orignalEvent.start?.date && updateRequest.start?.dateTime\r\n      if (isOneDayEvent) return { result: true, message: UpdateType.ONEDAY }\r\n\r\n      // 1. New start Time\r\n      if (updateRequest.start?.dateTime || updateRequest.start?.date) {\r\n        const isNewStartTime = date_diff(\r\n          orignalEvent.start.dateTime || orignalEvent.start.date,\r\n          updateRequest.start?.dateTime || updateRequest.start?.date\r\n        )\r\n\r\n        if (isNewStartTime.status) {\r\n          this.logger.info('new_start_time', isNewStartTime)\r\n          return { result: true, message: UpdateType.START_TIME }\r\n        }\r\n      }\r\n\r\n      return { result: false, message: UpdateType.NO_CREATE }\r\n    } catch (error) {\r\n      this.logger.error(error)\r\n      throw error\r\n    }\r\n  }\r\n\r\n  private event(event: Event): Event {\r\n    return {\r\n      id: event?.id,\r\n      status: event?.status,\r\n      summary: event?.summary,\r\n      description: event?.description,\r\n      location: event?.location,\r\n      creator: event?.creator,\r\n      organizer: event?.organizer,\r\n      attendees: event?.attendees,\r\n      start: event?.start,\r\n      end: event?.end,\r\n      recurringEventId: event?.recurringEventId,\r\n      originalStartTime: event?.originalStartTime,\r\n      recurrence: event?.recurrence,\r\n      extendedProperties: event?.extendedProperties\r\n    }\r\n  }\r\n}\r\n","export type User = {\r\n  id: string\r\n  email: string\r\n  name: string\r\n  avatar: string\r\n  role_name: string\r\n  createdAt: Date\r\n  updatedAt: Date\r\n}\r\n","import { IsNotEmpty, IsNumber, IsOptional, Length, IsArray, IsString } from 'class-validator'\r\nimport { ApiProperty } from '@nestjs/swagger'\r\n\r\nexport class CreateRoomReq {\r\n  @ApiProperty({ required: true, example: 'Cali', uniqueItems: true })\r\n  @IsNotEmpty({ message: 'Room name is required' })\r\n  @Length(3, 50, { message: 'Room name must be between 3 and 50 characters' })\r\n  name: string\r\n\r\n  @ApiProperty({ required: true, example: 'HL HANOI' })\r\n  @IsNotEmpty({ message: 'Location is required' })\r\n  location: string\r\n\r\n  @ApiProperty({ required: false, example: ['TV', 'projector'] })\r\n  @IsArray({ message: 'devcies must be an array' })\r\n  @IsString({ each: true })\r\n  devices: string[]\r\n\r\n  @ApiProperty({ required: false, example: 'Phòng to nhất SETA' })\r\n  @IsOptional()\r\n  description: string\r\n\r\n  @ApiProperty({ required: true, example: 10 })\r\n  @IsNotEmpty({ message: 'Capacity is required' })\r\n  @IsNumber({}, { message: 'Capacity must be a number' })\r\n  capacity: number\r\n\r\n  @ApiProperty({ required: false, example: 'opening | close' })\r\n  @IsOptional()\r\n  status: string\r\n\r\n  @ApiProperty({ required: false, example: '0 (white)' })\r\n  @IsOptional()\r\n  colorId: string\r\n}\r\n","import { CreateRoomReq } from \"./create-room.req\";\r\n\r\nexport class CreateRoomRes extends CreateRoomReq {}\r\n","import { IsNumberString } from 'class-validator'\r\n\r\nexport class RoomId {\r\n  @IsNumberString({}, { message: 'Room ID must be a number' })\r\n  id: string\r\n}\r\n","import { ApiResponseProperty } from '@nestjs/swagger'\r\nimport { MeetingRoom } from '../../typeorm'\r\nimport { Metadata } from '../../../types'\r\nexport class GetRoomRes {\r\n  @ApiResponseProperty({\r\n    type: Array,\r\n    example: [\r\n      {\r\n        id: 1,\r\n        title: 'String',\r\n        content: 'String',\r\n        createdDate: new Date()\r\n      }\r\n    ]\r\n  })\r\n  data: MeetingRoom[]\r\n\r\n  @ApiResponseProperty({\r\n    type: Object,\r\n    example: {\r\n      total: 1,\r\n      itemPage: 1,\r\n      currentPage: 1,\r\n      lastPage: 1\r\n    }\r\n  })\r\n  metadata: Metadata\r\n}\r\n","import { ApiProperty } from '@nestjs/swagger'\r\nimport { CreateRoomReq } from './create-room.req'\r\nimport { IsNotEmpty, IsOptional, Length } from 'class-validator'\r\n\r\nexport class UpdateRoomReq extends CreateRoomReq {\r\n  @ApiProperty({ required: true, example: 'Cali', uniqueItems: true })\r\n  @Length(3, 50, { message: 'Room name must be between 3 and 50 characters' })\r\n  @IsOptional()\r\n  name: string\r\n}\r\n","import { Body, Controller, Delete, Get, HttpCode, HttpStatus, Inject, Param, Post, Put, Query } from '@nestjs/common'\r\nimport { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger'\r\nimport { Logger } from 'winston'\r\nimport { MeetingRoom } from '../typeorm'\r\nimport { RoomService } from './room.service'\r\nimport { CreateRoomReq } from './dtos/create-room.req'\r\nimport { RoomId } from './dtos/get-room.req'\r\nimport { CreateRoomRes } from './dtos/create-room.res'\r\nimport { GetRoomRes } from './dtos/get-rooms.res'\r\nimport { response } from '../../utils'\r\nimport { UpdateRoomReq } from './dtos/update-room.req'\r\n@ApiTags('Room')\r\n@Controller('room')\r\nexport class RoomController {\r\n  constructor(@Inject('winston') private readonly logger: Logger, private readonly roomService: RoomService) {}\r\n\r\n  @ApiOperation({ summary: 'Create a meeting room' })\r\n  @ApiResponse({ status: HttpStatus.CREATED, description: 'Create a meeting room', type: CreateRoomRes })\r\n  @Post()\r\n  async createMeetingRoom(@Body() body: CreateRoomReq) {\r\n    return response<MeetingRoom>(await this.roomService.createMeetingRoomService(body))\r\n  }\r\n\r\n  @ApiOperation({ summary: 'Get Room List' })\r\n  @ApiResponse({ type: CreateRoomRes })\r\n  @Get()\r\n  async getAllRooms() {\r\n    return response<MeetingRoom[]>(await this.roomService.getAllRoomsService())\r\n  }\r\n\r\n  @ApiOperation({ summary: 'Get room by ID' })\r\n  @ApiResponse({ status: HttpStatus.CREATED, description: 'Create a meeting room', type: GetRoomRes })\r\n  @Get(':id')\r\n  async getRoomById(@Param() params: RoomId) {\r\n    return response<MeetingRoom>(await this.roomService.getRoomByIdService(params.id))\r\n  }\r\n\r\n  @ApiOperation({ summary: 'Update room infomation (Update info, lock room' })\r\n  @ApiResponse({ status: HttpStatus.CREATED, description: 'Create a meeting room', type: CreateRoomRes })\r\n  @Put(':id')\r\n  async updateRoomById(@Body() body: UpdateRoomReq, @Param() params: RoomId) {\r\n    return response<MeetingRoom>(await this.roomService.updateRoomByIdService(params.id, body))\r\n  }\r\n\r\n  @ApiOperation({ summary: 'Delete room by ID' })\r\n  @ApiResponse({ status: HttpStatus.NO_CONTENT, description: 'Delete room by ID' })\r\n  @Delete(':id')\r\n  async deleteRoomById(@Param() params: RoomId) {\r\n    return response<string>(await this.roomService.deleteRoomByIdService(params.id))\r\n  }\r\n}\r\n","import { Module } from '@nestjs/common'\r\nimport { TypeOrmModule } from '@nestjs/typeorm'\r\nimport { MeetingRoom, UserEntity } from '../typeorm'\r\nimport { RoomController } from './room.controller'\r\nimport { RoomService } from './room.service'\r\n\r\n@Module({\r\n  imports: [TypeOrmModule.forFeature([MeetingRoom, UserEntity])],\r\n  controllers: [RoomController],\r\n  providers: [RoomService],\r\n  exports: []\r\n})\r\nexport class RoomModule {}\r\n","import { Inject, Injectable } from '@nestjs/common'\r\nimport { Logger } from 'winston'\r\nimport { MeetingRoom } from '../typeorm'\r\nimport { UserEntity } from '../typeorm'\r\nimport { CreateRoomReq } from './dtos/create-room.req'\r\nimport { InjectDataSource, InjectRepository } from '@nestjs/typeorm'\r\nimport { DataSource, Repository } from 'typeorm'\r\nimport { ExceptionConflict, ExceptionNotFound } from '../../exception/controlled.exception'\r\nimport { GetRoomRes } from './dtos/get-rooms.res'\r\nimport { Pagination } from '../../types'\r\n\r\n@Injectable()\r\nexport class RoomService {\r\n  constructor(\r\n    @Inject('winston') private readonly logger: Logger,\r\n    @InjectDataSource() private readonly dataSource: DataSource,\r\n    @InjectRepository(MeetingRoom) private readonly meetingRoomRepository: Repository<MeetingRoom>,\r\n    @InjectRepository(UserEntity) private readonly userEntity: Repository<UserEntity>\r\n  ) {}\r\n\r\n  async createMeetingRoomService(body: CreateRoomReq): Promise<MeetingRoom> {\r\n    try {\r\n      const existedRoom = await this.meetingRoomRepository.findOne({\r\n        where: { name: body.name }\r\n      })\r\n\r\n      if (existedRoom) {\r\n        throw new ExceptionConflict('Room name already existed')\r\n      }\r\n\r\n      const { name, description, capacity, location, status, devices, colorId } = body\r\n\r\n      const newRoom = this.meetingRoomRepository.create({\r\n        name,\r\n        description,\r\n        capacity,\r\n        location,\r\n        status,\r\n        devices,\r\n        colorId\r\n      })\r\n\r\n      return await this.meetingRoomRepository.save(newRoom)\r\n    } catch (error) {\r\n      this.logger.error(error)\r\n      throw error\r\n    }\r\n  }\r\n\r\n  async getAllRoomsService(): Promise<MeetingRoom[]> {\r\n    try {\r\n      return await this.meetingRoomRepository.find()\r\n    } catch (error) {\r\n      this.logger.error(error)\r\n      throw error\r\n    }\r\n  }\r\n\r\n  async getRoomByIdService(id: string): Promise<any> {\r\n    try {\r\n      const room = await this.meetingRoomRepository.findOne({\r\n        where: { id }\r\n      })\r\n\r\n      // const res = await this.dataSource\r\n      //   .createQueryBuilder()\r\n      //   .select([\r\n      //     'meeting_room.id as id',\r\n      //     'meeting_room.name as name',\r\n      //     'meeting_room.description as description',\r\n      //     'meeting_room.capacity as capacity',\r\n      //     'meeting_room.location as location',\r\n      //     'meeting_room.status as status',\r\n      //     'user_entity.id as user_id',\r\n      //     'user_entity.name as user_name',\r\n      //     'user_entity.email as user_email'\r\n      //   ])\r\n      //   .from('calendar.meeting_room', 'meeting_room') // Alisas name could === table's name\r\n      //   .addFrom('core_admin.user', 'user_entity') // Alias HAVE TO !== table's name\r\n      //   .where('meeting_room.user_id = user_entity.id')\r\n      //   .getRawMany() // important\r\n\r\n      if (!room) {\r\n        throw new ExceptionNotFound('Room not found')\r\n      }\r\n      return room\r\n    } catch (error) {\r\n      this.logger.error(error)\r\n      throw error\r\n    }\r\n  }\r\n\r\n  async updateRoomByIdService(id: string, body: CreateRoomReq): Promise<MeetingRoom> {\r\n    try {\r\n      const existedRoom = await this.dataSource.manager.findOne(MeetingRoom, {\r\n        where: { id }\r\n      })\r\n\r\n      if (!existedRoom) {\r\n        throw new ExceptionNotFound('Room not found')\r\n      }\r\n      if (body.name && body.name !== existedRoom.name) {\r\n        const existedRoomName = await this.dataSource.manager.findOne(MeetingRoom, {\r\n          where: { name: body.name }\r\n        })\r\n\r\n        if (existedRoomName && existedRoomName.id !== id) {\r\n          throw new ExceptionConflict('Room name already existed')\r\n        }\r\n      }\r\n\r\n      for (const key in existedRoom) {\r\n        if (body[key]) {\r\n          existedRoom[key] = body[key]\r\n        }\r\n      }\r\n\r\n      return await this.meetingRoomRepository.save(existedRoom)\r\n    } catch (error) {\r\n      this.logger.error(error)\r\n      throw error\r\n    }\r\n  }\r\n\r\n  async deleteRoomByIdService(id: string): Promise<string> {\r\n    try {\r\n      const existedRoom = await this.dataSource.manager.findOne(MeetingRoom, {\r\n        where: { id }\r\n      })\r\n\r\n      if (!existedRoom) {\r\n        throw new ExceptionNotFound('Room not found')\r\n      }\r\n\r\n      await this.meetingRoomRepository.remove(existedRoom)\r\n      return 'Room deleted successfully'\r\n    } catch (error) {\r\n      this.logger.error(error)\r\n      throw error\r\n    }\r\n  }\r\n}\r\n","import { CreateDateColumn, UpdateDateColumn } from 'typeorm'\r\n\r\nexport class CommonTimeStamp {\r\n  @CreateDateColumn({\r\n    type: 'timestamptz',\r\n    name: 'created_at'\r\n  })\r\n  createdAt?: Date\r\n\r\n  @UpdateDateColumn({\r\n    type: 'timestamptz',\r\n    name: 'updated_at'\r\n  })\r\n  updatedAt?: Date\r\n}\r\n","import { Column, Entity, PrimaryColumn, PrimaryGeneratedColumn, ManyToOne, JoinColumn } from 'typeorm'\r\nimport { CommonTimeStamp } from './common.entity'\r\nimport { RecurrenEventEntity } from './recurrence_event.entity'\r\n\r\n@Entity({\r\n  name: 'events',\r\n  schema: process.env.PG_SHCEMA_ADMIN\r\n})\r\nexport class EventEntity extends CommonTimeStamp {\r\n  @PrimaryGeneratedColumn('uuid')\r\n  id: string\r\n\r\n  @Column({ type: 'uuid' }) // For cross schema join, schema \"core_admin\"\r\n  creator_id: string\r\n\r\n  @Column()\r\n  title: string\r\n\r\n  @Column()\r\n  description: string\r\n\r\n  @Column()\r\n  end: string\r\n\r\n  @Column()\r\n  start: string\r\n\r\n  @ManyToOne(() => RecurrenEventEntity)\r\n  @JoinColumn({ name: 'recurrenceId' })\r\n  recurrenceId: RecurrenEventEntity\r\n}\r\n\r\nexport class EventBaseEntity extends CommonTimeStamp {\r\n  @PrimaryColumn()\r\n  id: string\r\n\r\n  @Column()\r\n  status: string\r\n\r\n  @Column()\r\n  summary: string\r\n\r\n  @Column()\r\n  colorId: string\r\n}\r\n","import { Column, Entity, PrimaryColumn, PrimaryGeneratedColumn, OneToMany } from 'typeorm'\r\nimport { CommonTimeStamp } from './common.entity'\r\n\r\n\r\n@Entity({\r\n  name: 'events',\r\n  schema: process.env.PG_SHCEMA_ADMIN\r\n})\r\nexport class RecurrenEventEntity extends CommonTimeStamp {\r\n  @PrimaryGeneratedColumn('uuid')\r\n  id: string\r\n\r\n  @Column({ type: 'uuid' }) // For cross schema join, schema \"core_admin\"\r\n  creator_id: string\r\n\r\n  @Column()\r\n  title: string\r\n\r\n  @Column()\r\n  description: string\r\n\r\n  @Column()\r\n  end: string\r\n\r\n  @Column()\r\n  start: string\r\n}\r\n","import { Column, Entity, PrimaryGeneratedColumn } from 'typeorm'\r\nimport { CommonTimeStamp } from './common.entity'\r\n\r\n@Entity({\r\n  name: 'meeting_room',\r\n  schema: process.env.PG_SCHEMA,\r\n  synchronize: true\r\n})\r\nexport class RoomEntity extends CommonTimeStamp {\r\n  @PrimaryGeneratedColumn()\r\n  id?: string\r\n\r\n  @Column({\r\n    type: 'varchar',\r\n    length: 32,\r\n    nullable: false,\r\n    unique: true\r\n  })\r\n  name?: string\r\n\r\n  @Column({\r\n    type: 'varchar',\r\n    length: 55,\r\n    nullable: false\r\n  })\r\n  location: string\r\n\r\n  @Column({\r\n    type: 'simple-array',\r\n    default: []\r\n  })\r\n  devices: string[]\r\n\r\n  @Column({\r\n    type: 'varchar',\r\n    length: 55,\r\n    nullable: true\r\n  })\r\n  description: string\r\n\r\n  @Column({\r\n    type: 'int',\r\n    nullable: false\r\n  })\r\n  capacity: number\r\n\r\n  @Column({\r\n    length: 11,\r\n    nullable: true,\r\n    default: 'opening'\r\n  })\r\n  status: string\r\n\r\n  @Column({\r\n    length: 11,\r\n    default: '0'\r\n  })\r\n  colorId: string\r\n}\r\n","import { Entity, PrimaryGeneratedColumn } from 'typeorm'\r\n\r\n@Entity({\r\n  name: 'user',\r\n  schema: 'core_admin',\r\n  synchronize: false\r\n})\r\nexport class UserEntity {\r\n  @PrimaryGeneratedColumn('uuid')\r\n  id: string\r\n}\r\n","import { RoomEntity } from './entities/room.entity'\r\nimport { UserEntity } from './entities/user.entity'\r\nimport { EventEntity } from './entities/event.entity'\r\nimport { RecurrenEventEntity } from './entities/recurrence_event.entity'\r\n\r\nexport const entities = [RoomEntity, UserEntity, EventEntity, RecurrenEventEntity]\r\n\r\nexport { RoomEntity as MeetingRoom, UserEntity, EventEntity, RecurrenEventEntity }\r\n","import { Module } from '@nestjs/common'\r\n\r\nimport { TypeOrmModule } from '@nestjs/typeorm'\r\n\r\nimport { entities } from '.'\r\nimport { ConfigModule, ConfigService } from '@nestjs/config'\r\n\r\n@Module({\r\n  imports: [\r\n    TypeOrmModule.forRootAsync({\r\n      imports: [ConfigModule],\r\n      inject: [ConfigService],\r\n      useFactory: (configService: ConfigService) => ({\r\n        type: 'postgres',\r\n        host: configService.get('PG_HOST'),\r\n        port: configService.get('PG_PORT'),\r\n        username: configService.get('PG_USER'),\r\n        password: configService.get('PG_PASSWORD'),\r\n        database: configService.get('PG_DB'),\r\n        entities: entities,\r\n        cli: {\r\n          migrationsDir: __dirname + '/../database/migrations'\r\n        },\r\n        extra: {\r\n          charset: 'utf8mb4_unicode_ci'\r\n        },\r\n        synchronize: configService.get('NODE_ENV') === 'development' ? true : false\r\n      })\r\n    })\r\n  ],\r\n  controllers: [],\r\n  providers: [],\r\n  exports: [TypeOrmModule]\r\n})\r\nexport class TypeormConfigModule {}\r\n","import { ApiProperty } from '@nestjs/swagger'\r\nimport { Type } from 'class-transformer'\r\nimport { IsNotEmpty, IsNumber, Max, Min } from 'class-validator'\r\n\r\nexport interface AuthClient {\r\n  type?: string\r\n  client_id?: string\r\n  client_secret?: string\r\n  refresh_token?: string\r\n}\r\nexport type Status = {\r\n  result: boolean\r\n  message: string\r\n}\r\n\r\nexport type Metadata = {\r\n  total: number\r\n  itemPage: number\r\n  currentPage: number\r\n  lastPage: number\r\n}\r\n\r\nexport class Pagination {\r\n  @ApiProperty({ required: true, type: Number })\r\n  @IsNotEmpty({\r\n    message: 'page is required'\r\n  })\r\n  @IsNumber({}, { message: 'page must be a number' })\r\n  @Min(1, { message: 'page must be greater than 0' })\r\n  @Type(() => Number)\r\n  page: number\r\n\r\n  @ApiProperty({ required: true, type: Number })\r\n  @IsNotEmpty({\r\n    message: 'limit is required'\r\n  })\r\n  @IsNumber({}, { message: 'limit must be a number' })\r\n  @Min(1, { message: 'limit must be greater than 0' })\r\n  @Max(100, { message: 'limit must be less than 100' })\r\n  @Type(() => Number)\r\n  limit: number\r\n}\r\n","export enum message {\r\n  SUCCESS = 'Success',\r\n  FAIL = 'Fail',\r\n  GOOGLE_AUTH_FAIL = 'Google auth fail',\r\n  GOOGLE_AUTHORIZED = \"You're already authorized\"\r\n}\r\nexport const VN = 'Asia/Ho_Chi_Minh'\r\n\r\nexport const GoogleAuthError = ['invalid_grant', 'invalid_client', 'Unauthorized', 'Invalid Credentials']\r\n","export enum UpdateType {\r\n  SINGLE = 'single',\r\n  FOLLOWING = 'following',\r\n  ALL = 'all',\r\n\r\n  RECURRENCE = 'new_recurrence',\r\n  START_TIME = 'new_start_time',\r\n  ALLDAY = 'allday_to_one_day',\r\n  ONEDAY = 'one_day_to_allday',\r\n  NO_CREATE = 'No need to create new recurrence event'\r\n}\r\n\r\nexport enum DeleteType {\r\n  SINGLE = 'single',\r\n  FOLLOWING = 'following',\r\n  ALL = 'all'\r\n}\r\n\r\nexport enum GoogleError {\r\n  INVALID_CLIENT = 'invalid_client',\r\n  INVALID_GRANT = 'invalid_grant',\r\n  LIMIT_EXCEEDED = 'Rate Limit Exceeded',\r\n  UNAUTHORIZED = 'Unauthorized',\r\n  INVALID_CREDENTIALS = 'Invalid Credentials'\r\n}\r\n\r\nexport enum Role {\r\n  ADMIN = 'admin',\r\n  MANAGER = 'manager',\r\n  HR = 'HR',\r\n  MEMBER = 'member',\r\n  DIRECTOR = 'director'\r\n}\r\n","export * from './enum'\r\nexport * from './const'\r\nexport * from './common'\r\n","import * as moment from 'moment-timezone'\r\nimport { Event } from '../modules/google-calendar/gcanlendar.service'\r\n\r\nexport function checkOverLapTime(time1: any, time2: any) {\r\n  const time1Start = moment(time1.start)\r\n  const time1End = moment(time1.end)\r\n  const time2Start = moment(time2.start)\r\n  const time2End = moment(time2.end)\r\n  if (\r\n    time1Start.isBetween(time2Start, time2End) ||\r\n    time1End.isBetween(time2Start, time2End) ||\r\n    time2Start.isBetween(time1Start, time1End) ||\r\n    time2End.isBetween(time1Start, time1End)\r\n  ) {\r\n    return true\r\n  }\r\n  return false\r\n}\r\n\r\nexport function getTheFirstInstance(eventList: Event[]) {\r\n  if (eventList.length === 0) return null\r\n  if (eventList.length === 1) return eventList[0]\r\n  return eventList.sort((a, b) => {\r\n    return new Date(a.id.split('_')[0]).getTime() - new Date(b.id.split('_')[0]).getTime()\r\n  })\r\n}\r\n\r\nexport function date_sort_asc(date1: string, date2: string) {\r\n  if (new Date(date1).getTime() >= new Date(date2).getTime()) {\r\n    return 1\r\n  }\r\n  return -1\r\n}\r\n\r\nexport function date_diff(date1: string, date2: string) {\r\n  if (new Date(date1).getTime() !== new Date(date2).getTime()) {\r\n    return {\r\n      status: true,\r\n      value: new Date(date1).getTime() - new Date(date2).getTime()\r\n    }\r\n  }\r\n  return {\r\n    status: false,\r\n    value: 0\r\n  }\r\n}\r\n\r\nexport function date_add_milisecond(time: string, amount: number) {\r\n  return moment(new Date(time)).add(amount, 'milliseconds').toDate().toISOString()\r\n}\r\n\r\nexport function getDateOnly(rrule_string: string) {\r\n  return moment(rrule_string.split('T')[0]).toDate()\r\n}\r\n\r\n// Hàm này nhận vào một Event, trả về thời gian trước đó\r\n// Thời gian bị trừ lấy từ trường orginalStartTime\r\n// days: số ngày cần trừ\r\n// unit: đơn vị thời gian cần trừ\r\nexport function date_substract(date: Event, days: number, unit?: any) {\r\n  return moment(new Date(date.originalStartTime.date || date.originalStartTime.dateTime))\r\n    .subtract(days, unit || 'days')\r\n    .endOf('day')\r\n    .toDate()\r\n}\r\n\r\nexport function date_add(date: Event, days: number, unit?: any) {\r\n  return moment(new Date(date.originalStartTime.date || date.originalStartTime.dateTime))\r\n    .add(days, unit || 'days')\r\n    .toDate()\r\n}\r\n","export * from './response'\r\nexport * from './helper'","import { PipeTransform, ArgumentMetadata, HttpException, Injectable, ConsoleLogger } from '@nestjs/common'\r\nimport { Validate } from 'class-validator'\r\nimport { ExceptionBadRequest } from '../exception/controlled.exception'\r\nimport * as moment from 'moment-timezone'\r\n\r\n@Injectable()\r\nexport class EventDatePipe implements PipeTransform {\r\n  transform(value: any) {\r\n    try {\r\n      if (!value.start || !value.end) {\r\n        return value\r\n      }\r\n\r\n      if (new Date(value.start.dateTime) > new Date(value.end.dateTime)) {\r\n        throw new ExceptionBadRequest('start.dateTime must SMALLER than end.dateTime')\r\n      }\r\n      if (new Date(value.start.date) > new Date(value?.end?.date)) {\r\n        throw new ExceptionBadRequest('start.date must SMALLER than end.date')\r\n      }\r\n\r\n      if ((value.start.dateTime && value.end.date) || (value.start.date && value.end.dateTime)) {\r\n        throw new ExceptionBadRequest('dateTime and date cannot exist used together, one of them must be null')\r\n      }\r\n      if (\r\n        (!value.start.dateTime && !value.start.date) ||\r\n        (!value.end.dateTime && !value.end.date) ||\r\n        (!value.start && !value.end)\r\n      ) {\r\n        throw new ExceptionBadRequest('start.dateTime or start.date is required')\r\n      }\r\n\r\n      value.start.dateTime\r\n        ? (value.start.dateTime = moment(value.start.dateTime).tz('Asia/Ho_Chi_Minh').format())\r\n        : null\r\n      value.end.dateTime ? (value.end.dateTime = moment(value.end.dateTime).tz('Asia/Ho_Chi_Minh').format()) : null\r\n\r\n      value.start.date\r\n        ? (value.start.date = moment(value.start.date).startOf('day').tz('Asia/Ho_Chi_Minh').format().split('T')[0])\r\n        : null\r\n      value.end.date\r\n        ? (value.end.date = moment(value.end.date).startOf('day').tz('Asia/Ho_Chi_Minh').format().split('T')[0])\r\n        : null\r\n\r\n\r\n      return value\r\n    } catch (error) {\r\n      console.log(error)\r\n      throw error\r\n    }\r\n  }\r\n}\r\n","import { ApiProperty, ApiResponseProperty } from '@nestjs/swagger'\r\n\r\nexport class CommonReponse<T> {\r\n  @ApiResponseProperty({ example: 200 })\r\n  code: number\r\n\r\n  @ApiResponseProperty({ example: 'Error' })\r\n  message: string\r\n\r\n  @ApiResponseProperty({ example: [] })\r\n  data: T\r\n}\r\n\r\n/**\r\n * response handler\r\n * @param res\r\n * @param data\r\n * @returns\r\n */\r\nexport function response<T>(content: T, code?: number, info?: string) {\r\n  const res = { code: 200, info: 'SUCCESS', content: content || [] }\r\n\r\n  if (code) res.code = code\r\n  if (info) res.info = info\r\n\r\n  return res\r\n}\r\n","module.exports = require(\"@nestjs/common\");","module.exports = require(\"@nestjs/config\");","module.exports = require(\"@nestjs/core\");","module.exports = require(\"@nestjs/jwt\");","module.exports = require(\"@nestjs/passport\");","module.exports = require(\"@nestjs/swagger\");","module.exports = require(\"@nestjs/typeorm\");","module.exports = require(\"class-transformer\");","module.exports = require(\"class-validator\");","module.exports = require(\"cookie-parser\");","module.exports = require(\"google-auth-library\");","module.exports = require(\"googleapis\");","module.exports = require(\"lodash\");","module.exports = require(\"moment-timezone\");","module.exports = require(\"nest-winston\");","module.exports = require(\"passport-jwt\");","module.exports = require(\"rrule\");","module.exports = require(\"tslib\");","module.exports = require(\"typeorm\");","module.exports = require(\"winston\");","module.exports = require(\"winston-daily-rotate-file\");","module.exports = require(\"crypto\");","module.exports = require(\"fs\");","module.exports = require(\"path\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import { Logger } from '@nestjs/common'\r\n\r\nimport { HttpAdapterHost, NestFactory } from '@nestjs/core'\r\nimport { ValidationPipe } from '@nestjs/common'\r\nimport { CustomeValidationPipe } from './exception/customValidation.exception'\r\nimport { AppModule } from './app/app.module'\r\nimport { DocumentBuilder, SwaggerModule } from '@nestjs/swagger'\r\nimport * as cookieParser from 'cookie-parser'\r\nimport { GlobalExceptionsFilter } from './exception/httpFilter.exception'\r\nimport { NestExpressApplication } from '@nestjs/platform-express'\r\n\r\nasync function bootstrap() {\r\n  const app = await NestFactory.create<NestExpressApplication>(AppModule)\r\n  app.disable('x-powered-by')\r\n  app.useStaticAssets('public')\r\n  const globalPrefix = 'api'\r\n  app.setGlobalPrefix(globalPrefix)\r\n  app.useGlobalPipes(\r\n    new CustomeValidationPipe({\r\n      transform: true,\r\n      whitelist: true,\r\n      forbidNonWhitelisted: true,\r\n      transformOptions: { enableImplicitConversion: true }\r\n    })\r\n  )\r\n  const httpAdapterHost = app.get(HttpAdapterHost)\r\n  app.useGlobalFilters(new GlobalExceptionsFilter(httpAdapterHost))\r\n  app.use(cookieParser())\r\n  app.enableCors({\r\n    origin: true,\r\n    credentials: true\r\n  })\r\n\r\n  // Global in\r\n  const port = process.env.PORT || 3000\r\n\r\n  const swaggerConfig = new DocumentBuilder().setTitle('Calendar APIs Docs').setVersion('1.0').build()\r\n\r\n  const document = SwaggerModule.createDocument(app, swaggerConfig)\r\n  SwaggerModule.setup('api/specs', app, document)\r\n\r\n  await app.listen(port)\r\n  Logger.log(`🚀 Application is running on: http://localhost:${port}/${globalPrefix}`)\r\n}\r\n\r\nbootstrap()\r\n"],"names":[],"sourceRoot":""}